networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/24
          gateway: 192.168.0.1
services:
  flwr_s:
    image: tensorflow/tensorflow:latest
    ports:
      - "80:8000"
    expose:
      - "8000"
    volumes:
      - ./:/root/
    networks:
      default:
        ipv4_address: 192.168.0.2
    command:
      - /bin/sh
      - -c
      - |
        python3 -m pip install --upgrade flwr==1.5.0 tensorflow-cpu==2.14.1 pandas scikit-learn
        python3 /root/server.py
  flwr_c:
    image: tensorflow/tensorflow:latest
    ports:
      - "81-85:8000"
    expose:
      - "8000"
    environment:
      - DOCKER_HOST=unix:///run/docker.sock
    volumes:
      - ./:/root/
      - /run/docker.sock:/run/docker.sock:ro
    networks:
      - default
    command:
      - /bin/sh
      - -c
      - |
        python3 -m pip install --upgrade flwr==1.5.0 tensorflow-cpu==2.14.1 pandas scikit-learn
        python3 /root/client.py --id $(/bin/sh /root/get_id.sh) --address 192.168.0.2 --port 8000
    healthcheck:
        test: ["CMD", "curl", "-f", "http://192.168.0.2:8000"]
        interval: 30s
        timeout: 10s
        retries: 5
        start_period: 5s
